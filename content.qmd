---
title: "Content & Deliverables"
format: html
editor: visual
---

# *Comparison of Multi-Source Remote Sensing Estimations of Aboveground Biomass of Tropical Rainforests in Kwahu South, Ghana*

## Summary

This study investigated the extent to which different methods of remote sensing were able to estimate the aboveground biomass in a tropical forest reserve in Kwahu South, Ghana. By utilizing multiple sources of space-borne optical imagery from Landsat-8 and Sentinel-2 in combination with the LiDAR systems on the GEDI module of the ISS, a random forest machine learning algorithm was used to predict the aboveground biomass of the reserve. The accuracy of the prediction was compared to a dataset from Chloris geospatial, which is also validated on drone-based LiDAR datasets.

image: images/agbmodel1&2.jpg

# *Least Cost Path*

## Summary

A least cost path analysis intakes several parameters (e.g. terrain, land cover class, presence of roads, etc.) to determine the preferred route taken by wildlife. These pathways tend to avoid danger and reduce the amount of energy expended by these animals. Below is a sample of a least cost path of a grizzly bear in Alberta, Canada, demonstrating how the bear avoids certain terrains and human areas.

image: images/leastcostpath.png

## Leaflet

Sample leaflet - for detailed leaflet instructions, visit the FCOR 599 workshop archive page [here](https://ubc-mgem-fcor599.github.io/FCOR-599-Workshops/Interactive_Maps/leaflet.html).

```{r leaflet, include = FALSE}
library(dplyr); library(leaflet)

m <- leaflet(width = 600, height = 600)%>%
  
  #set up the two map panes
  addMapPane("right", zIndex = 1) %>%
  addMapPane("left",  zIndex = 2) %>%
  
  #add the ESRI basemap to both map panes
  addProviderTiles("Esri.WorldImagery", group = "base", layerId = "baseid1", options = pathOptions(pane = "right")) %>%
  addProviderTiles("Esri.WorldImagery", group = "base", layerId = "baseid2", options = pathOptions(pane = "left")) %>%
  
  #now lets add our NTEMS land cover from 2000
  addRasterImage(ntems2000, 
                 #you can increase the allowable size of the rast here
                 maxBytes = 10 * 1024 *1024,
                 #provide a name for the layer
                 group = "LC-2000",
                 #assign to a pane
                 options = leafletOptions(pane = "left")) %>%
  
  #now lets add our NTEMS land cover from 2020
  addRasterImage(ntems2020, 
                 #you can increase the allowable size of the rast here
                 maxBytes = 10 * 1024 *1024,
                 #provide a name for the layer
                 group = "LC-2020",
                 #assign to a pane
                 options = leafletOptions(pane = "right")) %>%
  
  #allow for layers to be toggles on/off by adding them to the layers control
  addLayersControl(overlayGroups = c("LC-2000", "LC-2020")) %>%
  
  #add slider control
  addSidebyside(layerId = "sidecontrols",
                rightId = "baseid1",
                leftId  = "baseid2",
                options = list(padding = 0)) %>%
  
  #add a legend
  addRasterLegend(ntems2000, opacity = 1)%>%
  
  #add scale bar
  addScaleBar(position = c("bottomleft"))

```

```{r map, echo=FALSE}
m
```

## Code Snippets

Sample code snippet. Notice that you can provide a toggle to switch between coding languages - this is referred to as a 'tabset' in quarto. It is good practice to try and convert your R code to python, and vice-versa to demonstrate coding proficiency. For example, let's showcase a function for calculating NDVI in R and Python.

::: {.panel-tabset group="language"}
## R

``` (.r)
calc_ndvi <- function(nir, red){ ndvi <- (nir-red)/(nir+red) return(ndvi) }
```

## Python

``` (.python)
def calc_ndvi(nir, red): 
  ndvi = (nir.astype(float)-red.astype(float))/(nir.astype(float)+red.astype(float))
  return(ndvi)
```
:::

## External links

You can also provide a frame linking to external websites. For example, here is a link to a Google Earth Engine application I developed. The full-screen GEE application is available [here](https://ee-melserramon.projects.earthengine.app/view/thermal-analysis-tool) in case you're interested.

(To use the GEE tool, navigate to any city you'd like, hit apply filters, and click anywhere on the map to retrieve a time-series of Landsat surface temperature observations for that point. Areas where the maximum temp exceeded 35 degrees Celsius in your date-range are highlighted in red.)

```{=html}
<iframe width="900" height="700" src="https://ee-melserramon.projects.earthengine.app/view/thermal-analysis-tool" title="Webpage example"></iframe>
```
